'number' + 3 + 3    
// number33 => неявне перетворення чисел 3 в стрінги і конкатенація, стрінга 

null + 3    
// 3 => конкатенація відсутнього значення з числом 3 => число 3

5 && "qwerty" 
// qwerty => all values are truthy, the value of the last operand is returned

+'40' + +'2' + "hillel"; 
// 42hillel => конкатенація (пусте значення + 40 + пусте значення + 2 + hillel) = конкатенація (42 (число) + hillel(стрінг)) = склеєна стрінга

'10' - 5 === 6; 
// false  => буленівський результат порівняння 2х чисел: 5 і 6

true + false 
// 1 => числове значення, сума 1 (true) +0 (false)

'4px' - 3 
// NaN => стрінга - числове значення = нот-е-намбер

'4' - 3 
// 1 => 4 (число, після неявного перетворення) - 3 (число)

'6' + 3 ** 0; 
// 61 (стрінга) в результаті конкатенації 6(стринга) і результату обчислення (3 в 0 ступені = 1) з неявним перетворенням в стрінгу

12 / '6' 
// 2 (число, як результат обчислення 12/6, 6 - неявне перетворення з стрінги в число)

'10' + (5 === 6); 
// 10false => стрінга після конкатенації стрінги 10 і буленівського результату порівняння 5 і 6 (false)

null == '' 
// false => For equality operators (== and !=) if one of the operands is null or undefined, the other must also be null or undefined to return true. Otherwise return false

3 ** (9 / 3); 
// 27 => 3 в 3 ступені = 27

!!'false' == !!'true' 
// true => !!'false' це true, !!'true' це true, true == true

0 || '0' && 1 
// 1 => першим виконується логічне І для стрінги 0 і числа 1, результат число 1; потім виконується логічне АБО для 2х чисел 0 і 1 (false i true), обирається true

(+null == false) < 1;
// false => ліва частина нерівності: +null == false це 0 == false дає true == 1; нерівність перетворюється на  1 < 1 => false

false && true || true
// true = > логічне І: false && true => false; логічне АБО: false || true => true

false && (false || true);
// false => першим виконуються дужки логічне АБО: false || true => true; логічне І: false && true => false

(+null == false) < 1 ** 5;
// false => ліва частина нерівності: +null == false це 0 == false дає true == 1; права частина нерівності це 1 в 5 ступені = 1; нерівність 1 < 1 - це false